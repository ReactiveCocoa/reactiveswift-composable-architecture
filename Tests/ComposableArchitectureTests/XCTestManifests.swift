#if !canImport(ObjectiveC)
import XCTest

extension ComposableArchitectureTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ComposableArchitectureTests = [
        ("testCancellation", testCancellation),
        ("testLongLivingEffects", testLongLivingEffects),
        ("testScheduling", testScheduling),
        ("testSimultaneousWorkOrdering", testSimultaneousWorkOrdering),
    ]
}

extension DebugTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DebugTests = [
        ("testArrayDiff", testArrayDiff),
        ("testClass", testClass),
        ("testCollection", testCollection),
        ("testComplexDiff", testComplexDiff),
        ("testComplexDiff2", testComplexDiff2),
        ("testComplexDiff3", testComplexDiff3),
        ("testDebugCaseOutput", testDebugCaseOutput),
        ("testDebugOutput", testDebugOutput),
        ("testDebugOutputConvertible", testDebugOutputConvertible),
        ("testDictionary", testDictionary),
        ("testEffectOutput", testEffectOutput),
        ("testEnum", testEnum),
        ("testNestedDump", testNestedDump),
        ("testObject", testObject),
        ("testRecursiveOutput", testRecursiveOutput),
        ("testSet", testSet),
        ("testStruct", testStruct),
        ("testStructDiff", testStructDiff),
        ("testTuple", testTuple),
    ]
}

extension EffectCancellationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EffectCancellationTests = [
        ("testCancelInFlight", testCancelInFlight),
        ("testCancellablesCleanUp_OnCancel", testCancellablesCleanUp_OnCancel),
        ("testCancellablesCleanUp_OnComplete", testCancellablesCleanUp_OnComplete),
        ("testCancellation", testCancellation),
        ("testCancellationAfterDelay", testCancellationAfterDelay),
        ("testCancellationAfterDelay_WithTestScheduler", testCancellationAfterDelay_WithTestScheduler),
        ("testCompleteBeforeCancellation", testCompleteBeforeCancellation),
        ("testConcurrentCancels", testConcurrentCancels),
        ("testDoubleCancellation", testDoubleCancellation),
        ("testImmediateCancellation", testImmediateCancellation),
        ("testNestedCancels", testNestedCancels),
        ("testSharedId", testSharedId),
    ]
}

extension EffectDebounceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EffectDebounceTests = [
        ("testDebounce", testDebounce),
        ("testDebounceIsLazy", testDebounceIsLazy),
    ]
}

extension EffectTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EffectTests = [
        ("testConcatenate", testConcatenate),
        ("testConcatenateOneEffect", testConcatenateOneEffect),
        ("testEffectSubscriberInitializer", testEffectSubscriberInitializer),
        ("testEffectSubscriberInitializer_WithCancellation", testEffectSubscriberInitializer_WithCancellation),
        ("testEraseToEffectWithError", testEraseToEffectWithError),
        ("testMerge", testMerge),
    ]
}

extension EffectThrottleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EffectThrottleTests = [
        ("testThrottleAfterInterval", testThrottleAfterInterval),
        ("testThrottleFirst", testThrottleFirst),
        ("testThrottleLatest", testThrottleLatest),
    ]
}

extension IdentifiedArrayTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IdentifiedArrayTests = [
        ("testIdSubscript", testIdSubscript),
        ("testInsert", testInsert),
        ("testInsertContentsOf", testInsertContentsOf),
        ("testMoveFromOffsets", testMoveFromOffsets),
        ("testRemoveAllWhere", testRemoveAllWhere),
        ("testRemoveAt", testRemoveAt),
        ("testRemoveAtOffsets", testRemoveAtOffsets),
        ("testRemoveId", testRemoveId),
        ("testReplaceSubrange", testReplaceSubrange),
        ("testReverse", testReverse),
        ("testSort", testSort),
        ("testSortBy", testSortBy),
    ]
}

extension LocalizedStringKeyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LocalizedStringKeyTests = [
        ("testFormatting", testFormatting),
    ]
}

extension MemoryManagementTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MemoryManagementTests = [
        ("testOwnership_ScopeHoldsOntoParent", testOwnership_ScopeHoldsOntoParent),
        ("testOwnership_ViewStoreHoldsOntoStore", testOwnership_ViewStoreHoldsOntoStore),
    ]
}

extension ReducerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ReducerTests = [
        ("testCallableAsFunction", testCallableAsFunction),
        ("testCombine", testCombine),
        ("testCombine_EffectsAreMerged", testCombine_EffectsAreMerged),
        ("testDebug", testDebug),
        ("testDebug_ActionFormat_OnlyLabels", testDebug_ActionFormat_OnlyLabels),
        ("testDefaultSignpost", testDefaultSignpost),
        ("testDisabledSignpost", testDisabledSignpost),
    ]
}

extension SchedulerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SchedulerTests = [
        ("testAdvance", testAdvance),
        ("testDebounceReceiveOn", testDebounceReceiveOn),
        ("testDelay0Advance", testDelay0Advance),
        ("testReceiveOnAdvance", testReceiveOnAdvance),
        ("testRunScheduler", testRunScheduler),
        ("testSubscribeOnAdvance", testSubscribeOnAdvance),
        ("testTwoIntervalOrdering", testTwoIntervalOrdering),
    ]
}

extension StoreTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StoreTests = [
        ("testActionQueuing", testActionQueuing),
        ("testIfLetAfterScope", testIfLetAfterScope),
        ("testIfLetTwo", testIfLetTwo),
        ("testLotsOfSynchronousActions", testLotsOfSynchronousActions),
        ("testParentStoreReceivesUpdatesFromChild", testParentStoreReceivesUpdatesFromChild),
        ("testPublisherScope", testPublisherScope),
        ("testScopeCallCount", testScopeCallCount),
        ("testScopeCallCount2", testScopeCallCount2),
        ("testScopedStoreReceivesUpdatesFromParent", testScopedStoreReceivesUpdatesFromParent),
        ("testScopeWithPublisherTransform", testScopeWithPublisherTransform),
        ("testSynchronousEffectsSentAfterSinking", testSynchronousEffectsSentAfterSinking),
    ]
}

extension TestStoreTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TestStoreTests = [
        ("testEffectConcatenation", testEffectConcatenation),
    ]
}

extension TimerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TimerTests = [
        ("testInterleavingTimer", testInterleavingTimer),
        ("testTimer", testTimer),
        ("testTimerCancellation", testTimerCancellation),
        ("testTimerCompletion", testTimerCompletion),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ComposableArchitectureTests.__allTests__ComposableArchitectureTests),
        testCase(DebugTests.__allTests__DebugTests),
        testCase(EffectCancellationTests.__allTests__EffectCancellationTests),
        testCase(EffectDebounceTests.__allTests__EffectDebounceTests),
        testCase(EffectTests.__allTests__EffectTests),
        testCase(EffectThrottleTests.__allTests__EffectThrottleTests),
//        testCase(IdentifiedArrayTests.__allTests__IdentifiedArrayTests),
//        testCase(LocalizedStringKeyTests.__allTests__LocalizedStringKeyTests),
        testCase(MemoryManagementTests.__allTests__MemoryManagementTests),
        testCase(ReducerTests.__allTests__ReducerTests),
        testCase(SchedulerTests.__allTests__SchedulerTests),
        testCase(StoreTests.__allTests__StoreTests),
        testCase(TestStoreTests.__allTests__TestStoreTests),
        testCase(TimerTests.__allTests__TimerTests),
    ]
}
#endif
