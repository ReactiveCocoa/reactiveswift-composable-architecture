{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"produced"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreProducer","preciseIdentifier":"s:22ComposableArchitecture13StoreProducerV","text":"StoreProducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This producer supports dynamic member lookup so that you can pluck out a specific field in"},{"type":"text","text":" "},{"type":"text","text":"the state:"}]},{"type":"codeListing","syntax":"swift","code":["viewStore.produced.alert","  .startWithValues { ... }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the emission happens the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":"â€™s state has been updated, and so the following"},{"type":"text","text":" "},{"type":"text","text":"precondition will pass:"}]},{"type":"codeListing","syntax":"swift","code":["viewStore.produced.producer","  .startWithValues { precondition($0 == viewStore.state) }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means you can either use the value passed to the closure or you can reach into"},{"type":"text","text":" "},{"type":"codeVoice","code":"viewStore.state"},{"type":"text","text":" directly."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/viewstore\/produced"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/produced","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SignalProducerConvertible"},{"type":"text","text":" that emits when state changes."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"produced"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StoreProducer","preciseIdentifier":"s:22ComposableArchitecture13StoreProducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":">"}],"title":"produced","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:22ComposableArchitecture9ViewStoreC8producedAA0D8ProducerVyxGvp","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreProducer":{"role":"symbol","title":"StoreProducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoreProducer"}],"abstract":[{"type":"text","text":"A producer of store state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreProducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StoreProducer"}],"url":"\/documentation\/composablearchitecture\/storeproducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"role":"symbol","title":"ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"url":"\/documentation\/composablearchitecture\/viewstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/produced":{"role":"symbol","title":"produced","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"produced"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StoreProducer","preciseIdentifier":"s:22ComposableArchitecture13StoreProducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SignalProducerConvertible"},{"type":"text","text":" that emits when state changes."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/produced","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/produced"}}}